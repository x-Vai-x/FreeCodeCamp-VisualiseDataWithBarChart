	<!DOCTYPE html>

	<html>

		<head>
			<title> Bar chart </title>
			<style>
				h1{
					text-align:center
				}
			</style>
		</head>

		<body>

			<header>
				<h1> Federal Reserve Economic Data </h1>
			</header>

			<main>
				<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
				<script src="https://d3js.org/d3.v5.js"></script>

				<script>
					$(document).ready(function(){

						const req=new XMLHttpRequest()
						req.open("GET",'https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json',true)
						req.send()
						req.onload=function(){
							const json=JSON.parse(req.responseText)
						
							const dataset=json.data


							const w=125*275
							const h=1000


							const domainHeight=20000

							 const yScale = d3.scaleLinear()
                     		.domain([0, domainHeight])
                     		.range([0, h])

                     		


							const svg = d3.select("body")
                 			.append("svg")
                  			.attr("width", w)
                  			.attr("height", h)

                  			svg.selectAll("rect")
       						.data(dataset)
       						.enter()
       						.append("rect")
       						.attr("x", (d, i) => (i * 100) +100)
       						.attr("y", (d, i) => yScale(domainHeight -800-d[1]))
       						.attr("width", 25)
       						.attr("height", (d, i) => yScale(d[1]))
       						.attr("fill", "navy")
       						.attr('class','bar')


      						svg.append("text").attr("class", "x label")
   							.attr("x", w/2).attr("y",yScale(domainHeight)).text("Date").attr('font-weight','bold')

   							svg.append("text").attr("class", "y label")
   							.attr("x", 0).attr("y",yScale(domainHeight/2)).text("GDP").attr('font-weight','bold')



       						svg.selectAll("text.values")
       						.data(dataset)
       						.enter()
       						.append("text")
      						.text((d) => d[0])
       						.attr("x", (d, i) => (i * 100)+100)
      						.attr("y", (d, i) => yScale(domainHeight-400))

       						svg.selectAll("text.labels")
       						.data(dataset)
       						.enter()
       						.append("text")
      						.text((d) => d[1])
       						.attr("x", (d, i) => (i * 100)+100)
      						.attr("y", (d, i) => yScale(domainHeight - d[1]-1200))


      						const yAxisScale = d3.scale.linear().range([domainHeight, 0])
                     		const yAxis= d3.axisLeft(yAxisScale)
   							svg.append("g")
        					.attr("class", "y axis")
        					.call(yAxis)

       						



						}
					})
					


				</script>
			</main>
		</body>


	</html>